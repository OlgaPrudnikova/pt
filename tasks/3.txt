<p><u>Повторення</u> (цикл) — це така організація дій в алгоритмі, при якій одна і та ж послідовність дій виконується кілька разів доти, поки виконується деяка умова.
<u>Цикл</u> — це алгоритмічна структура, за допомогою якої реалізується багаторазове повторення команд. Серія команд, що повторюється при кожному повторенні (ітерації) циклу, називається тілом циклу.</p>
<p>Алгоритми, в основі яких лежить структура «Повторення», називають циклічними.
У Python існує два основних типи циклів:
<i>while</i> цикл - виконується, поки певна умова є істинною.
<i>for</i> цикл - виконується для кожного елемента в послідовності.</p>

<p>1. while цикл має наступний синтаксис:
<pre>
while умова:
    # блок коду, який буде виконуватися
</pre>
Умова - це вираз, який може бути істинним або хибним. Якщо умова є істинною, блок коду буде виконуватися. Якщо умова є хибною, цикл закінчиться.<br/>
Наприклад, наступний код виведе числа від 1 до 10:
<pre>
i = 1
while i &lt;= 10:
    print(i)
    i += 1
</pre></p>
<p>2. for цикл має наступний синтаксис:
<pre>
for елемент in послідовність:
    # блок коду, який буде виконуватися
</pre>
<u>Послідовність</u> - це будь-який об'єкт, який може бути ітерований, наприклад, список, кортеж або рядок.</p>
<p>Наприклад, наступний код виведе числа від 1 до 10:
<pre>
for i in range(1, 11):
    print(i)
</pre>
У цьому коді використовується функція range(), яка повертає послідовність чисел від 1 до 10. У цьому випадку range(1, 11) поверне послідовність чисел від 1 до 10.</p>
<p>Інші операції циклів
У Python також існують інші операції циклів, такі як:<br/>
<i>break</i> - використовується для вимкнення циклу.<br/>
<i>continue</i> - використовується для переходу до наступного проходу циклу.<br/>
<i>else</i> - використовується для виконання блоку коду, якщо цикл завершиться не через умову, а через break.
</p>